<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.whereismyhome.model.dao.qna.QnaDAO">
	<!--
		int insertArticle(QnaInfo qnaInfo);
		List<QnaInfo> selectArticleList();
		QnaInfo selectAtricle(int articleNo);
		int deleteArticle(int articleNo);
		int updateArticle(QnaInfo qnaInfo);

		int no;
		String title;
		String content;
		String author;
		String date;
		int viewCount;
		String uuid;

		insert into qna(title, author, uuid) values("testtitle", "testauthor", "testuuid");
		insert into qna_detail(no, content, uuid) values((select no from qna where uuid="testuuid"), "testcontent", "testuuid");
		delete from qna where no = 2;
	-->
	
	<sql id="qnaListSelectBase">
		select
			q.no,
			q.title,
			ifnull(u.username, '탈퇴한 사용자') as author,
			q.date,
			q.viewcount
		from qna as q
		left join user u on u.userid = q.author
	</sql>
	
	<sql id="qnaDetailSelectBase">
		select
			q.no,
            q.title,
            ifnull(u.username, '탈퇴한 사용자') as author,
            q.date,
            q.viewcount,
            q.uuid,
            qd.content,
            q.likecount,
            ifnull((select username from user where userid=qc.author), '탈퇴한 사용자') as comment_author,
            qc.content as comment_content,
            qc.date as comment_date,
            qc.likecount as comment_likecount
		from qna as q
		join qna_detail qd on q.uuid=qd.uuid
        left join qna_comment qc on q.uuid=qc.qna_uuid
        left join user u on u.userid = qc.author or u.userid = q.author
	</sql>
	
	<insert id="insertArticleInfo" parameterType="QnaInfo">
		insert into
			qna(title, author, uuid) values(#{title}, #{author}, #{uuid})
	</insert>
	
	<insert id="insertArticleContent" parameterType="QnaInfo">
		insert into
			qna_detail(no, content, uuid) values((select no from qna where uuid=#{uuid}), #{content}, #{uuid})
	</insert>
	
	<select id="selectArticles" parameterType="Map" resultType="QnaInfo">
		<include refid="qnaListSelectBase"/>
		<choose>
			<when test="title != null and title != ''">where title like concat('%', #{title}, '%')</when>
			<when test="author != null and author != ''">where u.username=#{author}</when>
		</choose>
		order by date desc
		<if test="limit != null">limit #{limit} </if>
	</select>
	
	<select id="selectArticle" parameterType="int" resultMap="com.whereismyhome.resultmaps.QnaInfoMap">		
		<include refid="qnaDetailSelectBase" />
		where q.no=#{articleNo}
		order by comment_date
	</select>
	
	<update id="increaseViewCount" parameterType="int">
		update
			qna
		set viewcount=viewcount+1
		where no=#{articleNo}
	</update>
	
	<update id="updateArticle" parameterType="QnaInfo">
		update
			qna as q
			join qna_detail as qd on q.no=qd.no
		set q.title=#{title}, qd.content=#{content}
		where q.no=#{no};
	</update>
	
	<delete id="deleteArticle" parameterType="int">
		delete
		from qna
		where no=#{articleNo}
	</delete>
	
	<insert id="insertQnaComment" parameterType="map">
		insert into
			qna_comment(qna_uuid, author, content)
			values((select uuid from qna where no=#{articleNo}), #{author}, #{content});
	</insert>
</mapper>